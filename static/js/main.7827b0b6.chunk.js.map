{"version":3,"sources":["compenents/EmployeeCard/index.js","compenents/Wrapper/index.js","compenents/Title/index.js","compenents/SearchFilter/index.js","App.js","index.js"],"names":["EmployeeCard","props","className","alt","name","src","image","title","department","Wrapper","children","Title","class","SearchFilter","employeeTitle","employees","iterator","includes","push","options","map","option","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","Form","Group","controlId","Control","as","onChange","handleOccupationChange","value","occupationValue","Button","onClick","style","marginLeft","variant","sortButtonValue","inline","type","placeholder","handleSearchonChange","App","useState","Employees","search","setSearch","occupation","setOccupation","filteredEmployees","setFilteredEmployees","sortedEmployees","setSortedEmployees","sortButton","setSortButton","console","log","useEffect","filter","emp","toLowerCase","sort","employeelist","employee","key","event","target","searchValue","a","b","nameA","toUpperCase","nameB","reverse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7827b0b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\n\r\nexport default function EmployeeCard(props) {\r\n    return (\r\n        <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img className={\"image-cards\"} alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Name:</strong> {props.name}\r\n          </li>\r\n          <li>\r\n            <strong>Title:</strong> {props.title}\r\n          </li>\r\n          <li>\r\n            <strong>Department:</strong> {props.department}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div class=\"hero-image\">\n  <div class=\"hero-text\">\n  <h1 className=\"title\">{props.children}</h1>\n  </div>\n</div>\n  );\n}\n\nexport default Title;\n","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FaArrowDown } from 'react-icons/fa';\r\nimport { FaArrowUp } from 'react-icons/fa';\r\n\r\n\r\nfunction SearchFilter(props) {\r\n  let employeeTitle = [];\r\n  for (const iterator of props.employees) {\r\n    if (employeeTitle.includes(iterator.title)){\r\n      continue;\r\n    } else {\r\n      employeeTitle.push(iterator.title);\r\n    }\r\n  }\r\n\r\n\r\n  const options = employeeTitle.map((option) => \r\n    <option>{option}</option>);\r\n  \r\n\r\n  const arrowRender = () =>{\r\n      if (props.sortButtonValue === \"Descending\") {\r\n         return <FaArrowDown />\r\n        }\r\n      else if (props.sortButtonValue === \"Ascending\") {\r\n        return <FaArrowUp />\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Form.Group className=\"mb-0\"  controlId=\"occupation-select\">\r\n      <Form.Control as=\"select\" onChange={props.handleOccupationChange} value={props.occupationValue}>\r\n      <option value=\"\">-- Title --</option>\r\n      {options}\r\n    </Form.Control>\r\n    </Form.Group>\r\n    <Button onClick={props.onClick} style={{marginLeft: \"1em\"}} variant=\"primary\">{props.sortButtonValue} {arrowRender()}</Button>{' '}\r\n    </Nav>\r\n    <Form inline>\r\n    <Form.Control className=\"mr-sm-2\" type=\"text\" placeholder=\"Search..\" onChange={props.handleSearchonChange} value={props.value} />\r\n    </Form>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    )\r\n}\r\n\r\nexport default SearchFilter\r\n","import React, { useState, useEffect } from \"react\";\nimport Employees from \"./employees.json\";\nimport EmployeeCard from \"./compenents/EmployeeCard\";\nimport Wrapper from \"./compenents/Wrapper\";\nimport Title from \"./compenents/Title\";\nimport SearchFilter from \"./compenents/SearchFilter\";\n\nfunction App() {\n  const [employees, setEmployees] = useState(Employees);\n  const [search, setSearch] = useState(\"\");\n  const [occupation, setOccupation] = useState(\"\");\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n  const [sortedEmployees, setSortedEmployees] = useState([]);\n  const [sortButton, setSortButton] = useState(\"Ascending\");\n\n  console.log(employees)\n  const handleChange = (event) => {\n    setSearch(event.target.value);\n  };\n  const handleOccupationChange = (event) => {\n    setOccupation(event.target.value);\n  };\n\n  const handleClick = (event) => {\n    if (sortButton === \"Descending\") {\n      setSortedEmployees(\n        employees.sort((a, b) => {\n          let nameA = a.name.toUpperCase();\n          let nameB = b.name.toUpperCase(); \n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        })\n      );\n      setFilteredEmployees(sortedEmployees);\n      setSortButton(\"Ascending\");\n    } else {\n      setSortedEmployees(\n        employees.sort((a, b) => {\n          let nameA = a.name.toUpperCase();\n          let nameB = b.name.toUpperCase(); \n          if (nameA < nameB) {\n            return -1;\n          }\n          if (nameA > nameB) {\n            return 1;\n          }\n          return 0;\n        }).reverse()\n      );\n      setFilteredEmployees(sortedEmployees);\n       setSortButton(\"Descending\");\n\n      }\n  };\n\n  useEffect(() => {\n    setFilteredEmployees(\n      employees.filter((emp) =>\n        emp.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, employees]);\n\n  useEffect(() => {\n    setFilteredEmployees(\n      employees.filter((emp) =>\n        emp.title.toLowerCase().includes(occupation.toLowerCase())\n      )\n    );\n  }, [occupation, employees]);\n\n  useEffect(() => {\n    setSortedEmployees(employees.sort());\n  }, [sortedEmployees, employees]);\n\n  const employeelist = filteredEmployees.map((employee) => (\n    <EmployeeCard\n      key={employee.id}\n      id={employee.id}\n      name={employee.name}\n      image={employee.image}\n      title={employee.title}\n      department={employee.department}\n    />\n  ));\n\n  return (\n    <>\n      <Title>Meet Our Employees</Title>\n      <SearchFilter\n        employees={employees}\n        handleOccupationChange={handleOccupationChange}\n        occupationValue={occupation}\n        searchValue={search}\n        sortButtonValue={sortButton}\n        handleSearchonChange={handleChange}\n        onClick={handleClick}\n      />\n      <Wrapper>{employeelist}</Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}